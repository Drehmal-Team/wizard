[gd_scene load_steps=18 format=3 uid="uid://bmcp21nfcxnnc"]

[ext_resource type="PackedScene" uid="uid://bpevw2r2jiwyn" path="res://Checks.tscn" id="1_qfx2f"]
[ext_resource type="PackedScene" uid="uid://doq8uefudtoga" path="res://Mods.tscn" id="2_hpugn"]
[ext_resource type="PackedScene" uid="uid://d2e45cw8bbhfj" path="res://Choices.tscn" id="3_do7np"]
[ext_resource type="PackedScene" uid="uid://buumrt6abcnyv" path="res://ModList.tscn" id="4_5wdwl"]
[ext_resource type="PackedScene" uid="uid://cew7e6vstebj3" path="res://Fabric.tscn" id="5_4xb7k"]
[ext_resource type="PackedScene" uid="uid://rvajgvr2atcb" path="res://FinalInstall.tscn" id="6_m42nw"]

[sub_resource type="GDScript" id="GDScript_ys4wk"]
resource_name = "InstallMenu"
script/source = "extends Control

var step : int = 0
var mods : bool = false
var tween = Tween
@onready var Panels = $MainContainer.get_children()
@onready var PanelModList = $MainContainer.get_node(\"PanelModList\")

func _ready():
	Panels.remove_at(Panels.find(PanelModList))
	
	get_tree().get_root().size_changed.connect(resize)
	Global.NextStep.connect(next_step)
	Global.PrevStep.connect(prev_step)
	Global.SeeMods.connect(SeeMods)
	Global.OutMods.connect(OutMods)
	resize()
	
	for child in get_all_nodes($\".\") :
		print(child)
		if child is TextureButton:
			print(child)
			child.mouse_entered.connect(buttonHovered)
			child.pressed.connect(buttonPressed)
	
func resize():
	var ScreenDim = DisplayServer.window_get_size(0)
	PanelModList.set_size(Vector2(ScreenDim.x - 20,ScreenDim.y- 20))
	PanelModList.set_position(Vector2(10 + ScreenDim.x*2,10 + ScreenDim.y))
	for i in len(Panels):
		Panels[i].set_size(Vector2(ScreenDim.x - 20,ScreenDim.y- 20))
		Panels[i].set_position(Vector2(10 + ScreenDim.x*i,10))
		$MainContainer.position.x = ScreenDim.x * (0-step)
		$MainContainer.position.y = ScreenDim.y if mods else 0

func next_step():
	if step <= 3 :
		var ScreenDim = DisplayServer.window_get_size(0)
		step += 1
		
		tween = create_tween()
		tween.tween_property($MainContainer, \"position:x\", ScreenDim.x * (0-step),1).set_trans(Tween.TRANS_EXPO).set_ease(Tween.EASE_OUT)

func prev_step():
	if step >= 1:
		var ScreenDim = DisplayServer.window_get_size(0)
		step -= 1
		
		tween = create_tween()
		tween.tween_property($MainContainer, \"position:x\", ScreenDim.x * (0-step),0.8).set_trans(Tween.TRANS_BOUNCE).set_ease(Tween.EASE_OUT)
	
	elif step == 0 :
		SceneTransition.dissolve(\"res://main.tscn\")

func SeeMods():
	var ScreenDim = DisplayServer.window_get_size(0)
	mods = true
	
	tween = create_tween()
	tween.tween_property($MainContainer, \"position:y\", 10 - ScreenDim.y,1).set_trans(Tween.TRANS_EXPO).set_ease(Tween.EASE_OUT)
	
func OutMods():
	mods = false
	
	tween = create_tween()
	tween.tween_property($MainContainer, \"position:y\", 10,1).set_trans(Tween.TRANS_EXPO).set_ease(Tween.EASE_OUT)
	
	
func buttonHovered():
	Global.play_from_path(\"res://assets/sounds/Buttons/Hover.ogg\")

func buttonPressed():
	Global.play_from_path(\"res://assets/sounds/Buttons/Click.ogg\")

func get_all_nodes(node : Node) -> Array:
	var children := []
	for N in node.get_children():
		children.append(N)
		if N.get_child_count() > 0:
			children.append_array(get_all_nodes(N))
	return children
"

[sub_resource type="Shader" id="Shader_w2ucw"]
code = "shader_type canvas_item;

uniform sampler2D noiseTexture ;
uniform sampler2D detailNoiseTexture ;
uniform float pixelate = 0.008;

void fragment() {
	vec2 motion1 = vec2(0.5,0.2)*TIME*0.5;
	vec2 new_uv1 = vec2(mod((UV.x + motion1.x ),1.0),mod((UV.y + motion1.y),1.0));
	vec4 detail_noise = texture(detailNoiseTexture,new_uv1)*0.1;
	
	float angle = TIME*0.06;
	vec2 motion = vec2(cos(angle)*SCREEN_PIXEL_SIZE.x,sin(angle)*SCREEN_PIXEL_SIZE.y)*5000.0;
	vec2 new_uv = vec2(mod((UV.x + motion.x + (detail_noise.x - 0.5)),1.0),mod((UV.y + motion.y + (detail_noise.y - 0.5)),1.0));
	
	COLOR = texture(noiseTexture,new_uv);
}
"

[sub_resource type="Gradient" id="Gradient_svw7x"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_d8yip"]
frequency = 0.0138

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_678o5"]
width = 256
height = 256
seamless = true
seamless_blend_skirt = 0.35
color_ramp = SubResource("Gradient_svw7x")
noise = SubResource("FastNoiseLite_d8yip")

[sub_resource type="Gradient" id="Gradient_7qtm8"]
interpolation_mode = 2
offsets = PackedFloat32Array(0.166667, 0.688406, 0.963768)
colors = PackedColorArray(0.0680718, 8.60157e-05, 0.182966, 1, 0.2905, 0.1092, 0.42, 1, 0.49, 0.441, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_frcx5"]
seed = 70
frequency = 0.0021
fractal_type = 2
domain_warp_type = 2
domain_warp_amplitude = 10.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_s35ne"]
generate_mipmaps = false
seamless = true
seamless_blend_skirt = 0.337
color_ramp = SubResource("Gradient_7qtm8")
noise = SubResource("FastNoiseLite_frcx5")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_buuqy"]
shader = SubResource("Shader_w2ucw")
shader_parameter/pixelate = 0.024
shader_parameter/noiseTexture = SubResource("NoiseTexture2D_s35ne")
shader_parameter/detailNoiseTexture = SubResource("NoiseTexture2D_678o5")

[sub_resource type="Shader" id="Shader_8q0hb"]
code = "shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear;
uniform float pixelSize = 0.008;

void fragment() {
	vec2 new_uv = SCREEN_UV;
	new_uv -= mod(SCREEN_UV, vec2(pixelSize*SCREEN_PIXEL_SIZE.x,pixelSize*SCREEN_PIXEL_SIZE.y));
	COLOR = texture(SCREEN_TEXTURE, new_uv);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dpnuv"]
shader = SubResource("Shader_8q0hb")
shader_parameter/pixelSize = 24.0

[node name="InstallMenu" type="Control"]
texture_filter = 1
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_ys4wk")

[node name="Background" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_buuqy")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Pixelate" type="ColorRect" parent="Background"]
material = SubResource("ShaderMaterial_dpnuv")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MainContainer" type="Control" parent="."]
layout_direction = 2
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelChecks" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 30.0
offset_bottom = 30.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelChecks"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="Checks" parent="MainContainer/PanelChecks/MarginContainer" instance=ExtResource("1_qfx2f")]
layout_mode = 2

[node name="PanelChoice" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 1112.0
offset_bottom = 608.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelChoice"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="Choices" parent="MainContainer/PanelChoice/MarginContainer" instance=ExtResource("3_do7np")]
layout_mode = 2

[node name="PanelMods" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 1112.0
offset_bottom = 608.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelMods"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="Mods" parent="MainContainer/PanelMods/MarginContainer" instance=ExtResource("2_hpugn")]
layout_mode = 2

[node name="PanelModList" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 1112.0
offset_bottom = 608.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelModList"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="Mods" parent="MainContainer/PanelModList/MarginContainer" instance=ExtResource("4_5wdwl")]
layout_mode = 2

[node name="PanelFabric" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 1112.0
offset_bottom = 608.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelFabric"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="Fabric" parent="MainContainer/PanelFabric/MarginContainer" instance=ExtResource("5_4xb7k")]
layout_mode = 2

[node name="PanelFinalInstall" type="PanelContainer" parent="MainContainer"]
layout_mode = 0
offset_right = 1112.0
offset_bottom = 608.0

[node name="MarginContainer" type="MarginContainer" parent="MainContainer/PanelFinalInstall"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 15
theme_override_constants/margin_top = 15
theme_override_constants/margin_right = 15
theme_override_constants/margin_bottom = 15

[node name="FinalInstall" parent="MainContainer/PanelFinalInstall/MarginContainer" instance=ExtResource("6_m42nw")]
layout_mode = 2
